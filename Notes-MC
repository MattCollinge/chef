git clone https://github.com/opscode/chef-repo.git

cd /tmp

curl -O http://production.cf.rubygems.org/rubygems/rubygems-1.8.10.tg

tar zxf rubygems-1.8.10.tgz

cd rubygems-1.8.10

sudo ruby setup.rb --no-format-executable

sudo gem install chef --no-ri --no-rdoc

cp ~/downloads/mattcollinge.pem ~/chef-repo/.chef
cp ~/downloads/edit ~/chef-repo/.chef/mcenterprise-validator.pem
cp ~/downloads/_knife_config.txt ~/chef-repo/.chef/knife.rb

OR knife configure

knife client list

sudo gem install net-ssh net-ssh-multi fog highline --no-rdoc --no-ri --verbose

vi ~/chef-repo/.chef/knife.rb

sudo gem install knife-windows

ERROR:  Error installing knife-windows:
	gssapi requires Ruby version >= 1.9.1.
    
/usr/bin/ruby -e "$(/usr/bin/curl -fsSL https://raw.github.com/mxcl/homebrew/master/Library/Contributions/install_homebrew.rb)"

brew help

brew update ruby

gem install knife-windowsFetching: gssapi-1.0.3.gem (100%)ERROR:  While executing gem ... (Gem::FilePermissionError)
    You don't have write permissions into the /Library/Ruby/Gems/1.8 directory.


lrwxr-xr-x   1 root   wheel        76  8 Jul  2011 ruby -> ../../System/Library/Frameworks/Ruby.framework/Versions/Current/usr/bin/ruby

lrwxr-xr-x   1 root   wheel        74  8 Jul  2011 ri -> ../../System/Library/Frameworks/Ruby.framework/Versions/Current/usr/bin/ri

lrwxr-xr-x   1 root   wheel        76  8 Jul  2011 rake -> ../../System/Library/Frameworks/Ruby.framework/Versions/Current/usr/bin/rake


gem update --system  

install rvm

source /Users/mattcollinge/.rvm/scripts/rvm

rvm install 1.9
rvm use 1.9 --default 

Get the Chef Client Installer: http://opscode.com/chef/install.msi 
Insttructions here: http://wiki.opscode.com/display/chef/Installing+Chef+Client+on+Windows
After running start cmd prompt in admin mode
run: chef-client --version
Copy your ORGANIZATION-validator.pem key to C:\chef\ORGANIZATION-validator.pem

Create C:\chef\client.rb

Put this in it (replacing ORGANISATION) with real one:

log_level   :info
log_location    STDOUT
chef_server_url "https://api.opscode.com/organizations/ORGANIZATION"
validation_client_name "ORGANIZATION-validator"
validation_key  "c:/chef/ORGANIZATION-validator.pem"
client_key  "c:/chef/client.pem"
file_cache_path   "c:/chef/cache"
file_backup_path  "c:/chef/backup"
cache_options     ({:path => "c:/chef/cache/checksums", :skip_expires => true})

run: chef-client -c c:\chef\client.rb 


enable WinRM: winrm quickconfig -q
Increase max Shell memory usage from 100Mb: winrm set winrm/config/winrs @{MaxMemoryPerShellMB="300"}
Increate timeout from 60 sec to 30 mins: winrm set winrm/config @{MaxTimeoutms="1800000"}

bootstrap windows:
knife bootstrap windows winrm ec2-50-xx-xx-124.compute-1.amazonaws.com -r 'role[webserver],role[production]' -x Administrator -P 'super_secret_password'

knife bootstrap windows winrm Win7-Dev -x matt -P 'xxxxx'
knife winrm "role:web" "net stats srv" -x Administrator -P 'super_secret_password'
knife winrm "Win7-Dev" "net stats srv" -x matt -P 'xxxxx'

knife bootstrap windows-shell etc....

unencrypted and basic auth:
winrm set winrm/config/service @{AllowUnencrypted="true"}
winrm set winrm/config/service/auth @{Basic="true"}


knife.rb contents:

current_dir = File.dirname(__FILE__)
log_level                :info
log_location             STDOUT
node_name                "mattcollinge"
client_key               "#{current_dir}/mattcollinge.pem"
validation_client_name   "mcenterprise-validator"
validation_key           "#{current_dir}/mcenterprise-validator.pem"
chef_server_url          "https://api.opscode.com/organizations/mcenterprise"
cache_type               'BasicFile'
cache_options( :path => "#{ENV['HOME']}/.chef/checksums" )
cookbook_path            ["#{current_dir}/../cookbooks"]

cp /Users/mattcollinge/Chef/mattcollinge.pem /Users/mattcollinge/.chef/mattcollinge.pem



Adding a cookbok to the runlist:

Download a cookbook from Communit Site: knife cookbook site download getting-started
Unpack tar: tar zxvf getting-started-0.4.0-tar.gz
Delete tar: del getting-started-0.40.tar.gz

Upload to Hosted Chef: knife cookbook upload getting-started
Add Cookbook to the run list: knife node run_list add Win7-Dev 'recipe[getting-started]'

On the Target Node run: chef-client -c client.rb

To remove the recipe from the run_list: knife node run_list remove Win7-Dev 'recipe[getting-started]'

To search for all nodes: knife search node 'name:*'

DotNet Chef?...

EC2:
knife ec2 server create -r "role[webserver]" -I ami-ab9491df --flavor t1.micro -G www,default -x ubuntu -N mattsServer -S first-ec2-keypair
Install aws tools using homebrew:
brew install ec2-api-tools

create .ec2 folder:
mkdir ~/.ec2

create file in .ec2 folder:
touch matt_gmail_aws

add:
xport EC2_ACCESS_KEY="AKIAIFN275LP2RRZZQBQ"
export EC2_SECRET_KEY="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"
export JAVA_HOME="/System/Library/Frameworks/JavaVM.framework/Home"
export EC2_PRIVATE_KEY="$(/bin/ls $HOME/.ec2/pk-*.pem)"
export EC2_CERT="$(/bin/ls $HOME/.ec2/cert-*.pem)"
export EC2_HOME="/usr/local/Cellar/ec2-api-tools/1.5.2.5/jars" # ec2-version w/o date
export EC2_URL="ec2.eu-west-1.amazonaws.com"

execute this:
source $HOME/.ec2/matt_gmail_aws

OR add this to ~/.bash_profile:
echo now executing ~/.bash_profile
if [[ -s $HOME/.ec2/matt_gmail_aws ]] then
  source $HOME/.ec2/matt_gmail_aws
fi


generate a new key pair from AWS:
ec2-add-keypair eu-west-ec2-keypair > ~/.ec2/eu-west-ec2-keypair

Change permissions so that we can add them to our key ring (default read for all is too loose):
chmod go-r ~/.ec2/eu-west-ec2-keypair

check permissions have changed:
ls -l ~/.ec2/eu-west-ec2-keypair

add ssh to key chain:
ssh-add ~/.ec2/eu-west-ec2-keypair

check you added the ssh key:
ssh-add -l

copy local .ec2 folder to dropbox copy:
cp -r ~/.ec2 ~/Dropbox/dotfiles/.ec2

link your .ec2 folder in dopbox to local .ec2 folder:
ln -nfs ~/Dropbox/dotfiles/.ec2 ~/.ec2

ec2-describe-availability-zones

Create instance: ('default' security zone has to exist before running)

knife ec2 server create -r "role[webserver]" -I ami-ab9491df --flavor t1.micro -G default -x ubuntu -N aws-Test -S eu-west-ec2-keypair --region eu-west-1 -Z eu-west-1a

!! Use this One !!

knife ec2 server create -r "role[webserver]" -I ami-ab9491df --flavor t1.micro -G quick-start-1 -x ubuntu -N awsMC1 -S ec2-eu-west-keypair --region eu-west-1 -Z eu-west-1a


Instance ID: i-d1e08e99
Flavor: t1.micro
Image: ami-ab9491df
Region: eu-west-1
Availability Zone: eu-west-1a
Security Groups: default
Tags: {"Name"=>"aws-Test"}
SSH Key: eu-west-ec2-keypair

Waiting for server...............
Public DNS Name: ec2-54-247-38-231.eu-west-1.compute.amazonaws.com
Public IP Address: 54.247.38.231
Private DNS Name: ip-10-58-207-68.eu-west-1.compute.internal
Private IP Address: 10.58.207.68

Install cookbook in chef server
knife cookbook site install riak

Installing DataDog agent:
curl -L http://dtdg.co/dd-agent-osx | DD_API_KEY=905866a8d32c5161ecc8c49b0098b4a4 sh

Setup launchd to run at startup:

mkdir -p ~/Library/LaunchAgents
cp ~/.datadog-agent/launchd/com.datadoghq.Agent.plist ~/Library/LaunchAgents/.
launchctl load -w ~/Library/LaunchAgents/com.datadoghq.Agent.plist

Windows::

Need to set up userdata in knife.rb:
knife[:aws_user_data] = ""

AWS User Data for Windows Instance:
<script>
ipconfig /all > c:\ipconfig.txt
netstat > c:\netstat.txt

winrm quickconfig -q
winrm set winrm/config/winrs @{MaxMemoryPerShellMB="300"}
winrm set winrm/config @{MaxTimeoutms="1800000"}

winrm set winrm/config/service @{AllowUnencrypted="true"}
winrm set winrm/config/service/auth @{Basic="true"}
</script>
